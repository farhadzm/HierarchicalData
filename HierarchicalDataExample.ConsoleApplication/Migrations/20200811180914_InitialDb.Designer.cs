// <auto-generated />
using System;
using HierarchicalDataExample.ConsoleApplication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HierarchicalDataExample.ConsoleApplication.Migrations
{
    [DbContext(typeof(HierarchicalDataDbContext))]
    [Migration("20200811180914_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HierarchicalDataExample.ConsoleApplication.Models.Comments", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PostId = 1,
                            Text = "First comments",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ParentId = 1,
                            PostId = 1,
                            Text = "Reply to first comments",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            PostId = 1,
                            Text = "Second comment",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            ParentId = 2,
                            PostId = 1,
                            Text = "Reply to previous comment",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            ParentId = 3,
                            PostId = 1,
                            Text = "Reply to second comment",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("HierarchicalDataExample.ConsoleApplication.Models.Posts", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descriptions = "HierarchicalData",
                            Title = "Test HierarchicalData",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("HierarchicalDataExample.ConsoleApplication.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Farhad Zamani"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Himan falahi"
                        });
                });

            modelBuilder.Entity("HierarchicalDataExample.ConsoleApplication.Models.Comments", b =>
                {
                    b.HasOne("HierarchicalDataExample.ConsoleApplication.Models.Comments", "Parent")
                        .WithMany("ChildComments")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("HierarchicalDataExample.ConsoleApplication.Models.Posts", "Post")
                        .WithMany("ChildComments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HierarchicalDataExample.ConsoleApplication.Models.Users", "User")
                        .WithMany("ChildComments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("HierarchicalDataExample.ConsoleApplication.Models.Posts", b =>
                {
                    b.HasOne("HierarchicalDataExample.ConsoleApplication.Models.Users", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
